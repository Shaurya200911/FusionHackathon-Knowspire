# Generated by Django 5.2.4 on 2025-07-27 15:54

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("userauth", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AddField(
            model_name="userskill",
            name="archived",
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name="userskill",
            name="archived_at",
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name="userskill",
            name="aux_flashcard_xp",
            field=models.PositiveIntegerField(default=0),
        ),
        migrations.AddField(
            model_name="userskill",
            name="aux_quiz_xp",
            field=models.PositiveIntegerField(default=0),
        ),
        migrations.AddField(
            model_name="userskill",
            name="completion_xp_awarded",
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name="userskill",
            name="core_lesson_xp",
            field=models.PositiveSmallIntegerField(default=0),
        ),
        migrations.AddField(
            model_name="userskill",
            name="current_level",
            field=models.PositiveSmallIntegerField(default=0),
        ),
        migrations.AddField(
            model_name="userskill",
            name="last_revision_pair_awarded_on",
            field=models.DateField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name="userskill",
            name="target_level",
            field=models.PositiveSmallIntegerField(default=0),
        ),
        migrations.CreateModel(
            name="LearningSession",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("planned_minutes", models.PositiveSmallIntegerField()),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("planned", "Planned"),
                            ("running", "Running"),
                            ("completed", "Completed"),
                        ],
                        default="planned",
                        max_length=20,
                    ),
                ),
                ("started_at", models.DateTimeField(blank=True, null=True)),
                ("finished_at", models.DateTimeField(blank=True, null=True)),
                ("content_json", models.JSONField(blank=True, default=dict)),
                ("progress_before", models.PositiveSmallIntegerField(default=0)),
                ("progress_after", models.PositiveSmallIntegerField(default=0)),
                ("lesson_core_xp_awarded", models.PositiveSmallIntegerField(default=0)),
                (
                    "revision_flashcards_count",
                    models.PositiveSmallIntegerField(default=0),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "revision_quiz_attempt",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="userauth.quizattempt",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="learning_sessions",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "userskill",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="sessions",
                        to="userauth.userskill",
                    ),
                ),
            ],
            options={
                "ordering": ("-created_at",),
            },
        ),
        migrations.CreateModel(
            name="Flashcard",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("question", models.TextField()),
                ("answer", models.TextField()),
                ("is_revision", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "skill",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="flashcards",
                        to="userauth.skill",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="flashcards",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "session",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="flashcards",
                        to="userauth.learningsession",
                    ),
                ),
            ],
            options={
                "ordering": ("-created_at",),
            },
        ),
        migrations.CreateModel(
            name="QuizQuestion",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "type",
                    models.CharField(
                        choices=[("mcq", "Multiple Choice"), ("open", "Open Ended")],
                        default="mcq",
                        max_length=10,
                    ),
                ),
                ("prompt", models.TextField()),
                ("options", models.JSONField(blank=True, default=list)),
                ("correct_index", models.IntegerField(blank=True, null=True)),
                ("explanation", models.TextField(blank=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "session",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="quiz_questions",
                        to="userauth.learningsession",
                    ),
                ),
                (
                    "skill",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="quiz_questions",
                        to="userauth.skill",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="quiz_questions",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ("-created_at",),
            },
        ),
    ]
